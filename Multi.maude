fmod MSET-INT is protecting INT .

sorts Mset NeMset . *** Multisets/non-empty multisets
subsorts Int < NeMset < Mset .

op none : -> Mset [ctor] . *** Empty multiset
op _ _ : Mset Mset -> Mset [ctor assoc comm id: none] .
op _ _ : NeMset NeMset -> NeMset [ctor assoc comm id: none] .
op size : Mset -> Nat . *** # of elements in a multiset  : os elementos em um multiset     -> OK
op mult : Int Mset -> Nat . *** Multiplicity of an element : Multiplicidade de um elemento -> OK
op delete : Int Mset -> Mset . *** Remove ONE occurrence : Remover UMA ocorrência          -> OK
op _in_ : Int Mset -> Bool . *** Is element in multiset? : O elemento está em multiset?    -> OK
op max : NeMset -> Int . *** Largest element : Maior elemento                              -> OK
op _>mul_ : Mset Mset -> Bool . *** Multiset comparison : Comparação de multiconjuntos     -> OK

var I I' : Int . var MS MS' : Mset .

eq delete(I, I MS) = MS .
ceq delete(I, MS) = MS if not I in MS .

eq I in MS = mult(I, MS) > 0 .

eq max(I) = I .
ceq max(MS I) = max(MS) if max(MS) > I .

eq size(none) = 0 .
eq size(MS I) = s (size(MS)) .

eq mult(I, none) = 0 .
eq mult(I, MS I) = s(mult(I, MS)) .
ceq mult(I, MS I') = mult(I, MS) if (I =/= I') .

eq (I MS) >mul none = true .
eq none >mul (I MS) = false .
eq (I MS) >mul (I MS') = MS >mul MS' .
ceq MS >mul MS' = true if max(MS) > max(MS') .
ceq MS >mul MS' = false if max(MS) < max(MS') .

endfm
