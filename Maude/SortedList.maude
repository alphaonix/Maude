load Bintree.maude
load IntList.maude

fmod SORTED-BINTREE is protecting BINTREE-NAT1 protecting LIST-NAT1  .
sort BinSearchTree . subsort BinSearchTree < BinTree .
var B : BinTree .
vars N M : Nat .
vars BST BST' : BinSearchTree .
cmb B : BinSearchTree if isSearchTree(B) = T .
op insertSorted : BinSearchTree Nat -> BinSearchTree .

eq insertSorted(empty, N) = bintree(empty, N ,empty) . 
ceq insertSorted(bintree(BST,N,BST'), M) = bintree(BST,N,insertSorted(BST', M)) if M > N = T .
ceq insertSorted(bintree(BST,N,BST'), M) = bintree(insertSorted(BST,M),N,BST') if M > N = F .

endfm
